{"version":3,"sources":["script.js"],"names":["form","document","querySelector","recipeField","msgContainer","recipeContainer","msgHideBtn","recipeIds","recipeIngredients","ingredientsFunc","forEach","recId","httpReq","XMLHttpRequest","open","setRequestHeader","responseType","addEventListener","status","ingredients","response","ingredientsArray","ingredient","push","name","console","error","message","onerror","send","JSON","stringify","id","e","preventDefault","payload","recipe","value","focus","xhr","onload","readyState","res","code","style","display","recipes","results","lastElementChild","removeChild","length","index","cardHtml","image","title","insertAdjacentHTML","target","classList","contains","ingredientsContainer","nextElementSibling","_","btnId","split","lastChild","ingreHtml"],"mappings":"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","file":"script.js","sourcesContent":["'use strict'\n\n//dom element references\nconst form = document.querySelector('.form');\nconst recipeField = document.querySelector('.recipe__field')\nconst msgContainer = document.querySelector('.response__msg__container');\nconst recipeContainer = document.querySelector('.recipe__cards__container');\nconst msgHideBtn = document.querySelector('.msg__hide__btn');\n\n//variables to define recipeIds and recipeIngredients array\nconst recipeIds = [];\nconst recipeIngredients = [];\n\n\n\n\n//function to get the ingredients of given recipe\nconst ingredientsFunc = () => {\n\n    recipeIds.forEach(recId => {\n\n        //making http request to get the ingredients\n        const httpReq = new XMLHttpRequest();\n\n        httpReq.open('POST' ,'/getIngredients');\n        httpReq.setRequestHeader('content-type', 'application/json');\n        httpReq.responseType = 'json';\n\n        httpReq.addEventListener('load',  () => {\n            if(httpReq.status === 200) {\n                const ingredients = httpReq.response.ingredients;\n                const ingredientsArray = [];\n\n                ingredients.forEach(ingredient => {\n                    ingredientsArray.push(ingredient.name);\n                });\n                recipeIngredients.push(ingredientsArray);\n            }\n            else {\n                console.error(httpReq.response.message);\n            }\n        });\n        httpReq.onerror = () => console.error('Something went wrong');\n        httpReq.send(JSON.stringify({id : recId}));\n    }); \n};\n\n\n\n\n\n//When form is submitted\nform.addEventListener('submit', e => {\n    //preventing default nature of form\n    e.preventDefault();\n\n    const payload = { recipe : recipeField.value };\n    recipeField.value = '';\n    recipeField.focus();\n\n\n    //making post request for sending recipe name\n    const xhr = new XMLHttpRequest();\n    xhr.open('POST', '/getRecipe');\n    xhr.setRequestHeader('content-type', 'application/json');\n    xhr.responseType = 'json';\n\n    xhr.onload = () => {\n        if (xhr.readyState === 4) {\n            const res = xhr.response;\n\n            if(!res.code) {\n                const recipes = res.results;\n\n                //deleting all the previous recipes to add new ones\n                while(recipeContainer.lastElementChild) {\n                    recipeContainer.removeChild(recipeContainer.lastElementChild);\n                    recipeIds.length = 0;\n                    recipeIngredients.length = 0;\n                };\n                recipes.forEach((recipe, index) => {   \n                    recipeIds.push(recipe.id);\n\n                    const cardHtml = `<div class=\"recipe__card\"><div class=\"recipe__header\">\n                    <img src=\"${recipe.image}\" alt=\"Recipe name\" class=\"recipe__image\" loading=\"lazy\"></div><div class=\"recipe__body\"><h4 class=\"recipe__name\">${recipe.title}</h4>\n                    <button class=\"recipe__ingredients__btn btn\" id=\"ingredients--btn__${index}\">Ingredients</button><div class=\"recipe__ingredients__container\">\n                    </div></div></div>`;\n\n                    recipeContainer.insertAdjacentHTML('beforeend', cardHtml);\n                });\n                //function call for getting all the ingredients\n                ingredientsFunc();\n            }\n            else { msgContainer.style.display = 'block'; }\n        } \n        else { msgContainer.style.display = 'block'; }\n    };\n\n    xhr.onerror = () => { msgContainer.style.display = 'block'; }\n    xhr.send(JSON.stringify(payload));\n});\n\n\n\n\n//Event handler for message hide button\nmsgHideBtn?.addEventListener('click', () => {\n    msgContainer.style.display = 'none';\n});\n\n\n\n\n\n//Event handler for main Container\n//Here we will use the concept of traversing (navigation among nodes in dom) \nrecipeContainer.addEventListener('click', e => {\n    \n    if(e.target.classList.contains('recipe__ingredients__btn')) {\n        const ingredientsContainer = e.target.nextElementSibling;\n\n        if(ingredientsContainer.style.display !== \"block\") {\n            const [_, btnId] = (e.target.id).split('__');\n        \n            //removing all the ingredients\n            while(ingredientsContainer.lastChild) { \n                ingredientsContainer.removeChild(ingredientsContainer.lastChild);\n            };\n\n            recipeIngredients[btnId].forEach(ingredient => {\n                const ingreHtml = `<p class=\"ingredient__name\">${ingredient}</p>`;\n                ingredientsContainer.insertAdjacentHTML('beforeend', ingreHtml);\n            })\n            ingredientsContainer.style.display = 'block';\n        }    \n\n        else {\n            e.target.nextElementSibling.style.display = 'none';\n        } \n    }\n});\n"]}